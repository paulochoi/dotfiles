-- -- setup adapters
-- require("dap-vscode-js").setup({
-- 	debugger_path = vim.fn.stdpath("data") .. "/mason/packages/js-debug-adapter",
-- 	debugger_cmd = { "js-debug-adapter" },
-- 	adapters = { "pwa-node", "pwa-chrome", "pwa-msedge", "node-terminal", "pwa-extensionHost" },
-- })

-- local dap_status_ok, dap = pcall(require, "dap")
-- if not dap_status_ok then
-- 	return
-- end

-- local dap_ui_status_ok, dapui = pcall(require, "dapui")
-- if not dap_ui_status_ok then
-- 	return
-- end

-- local exts = {
--   "javascript",
--   "typescript",
--   "javascriptreact",
--   "typescriptreact",
--   -- using pwa-chrome
--   "vue",
--   "svelte",
-- }

-- -- local dap_install_status_ok, dap_install = pcall(require, "dap-install")
-- -- if not dap_install_status_ok then
-- --   return
-- -- end

-- -- dap_install.setup {}

-- dap.listeners.after.event_initialized["dapui_config"] = function()
-- 	dapui.open()
-- end

-- dap.listeners.before.event_terminated["dapui_config"] = function()
-- 	dapui.close()
-- end

-- dap.listeners.before.event_exited["dapui_config"] = function()
-- 	dapui.close()
-- end

-- vim.keymap.set("n", "du", [[:NvimTreeToggle<CR> :lua require'dapui'.toggle()<CR>]])
-- -- Press f5 to debug
-- vim.keymap.set("n", "<leader>ds", [[:lua require'dap'.continue()<CR>]], {})
-- -- Press CTRL + b to toggle regular breakpoint
-- vim.keymap.set("n", "<leader>db", [[:lua require'dap'.toggle_breakpoint()<CR>]], {})

-- -- language config
-- for _, language in ipairs({ "typescript", "javascript" }) do
-- 	dap.configurations[language] = {
-- 		-- {
-- 		-- 	name = "Launch",
-- 		-- 	type = "pwa-node",
-- 		-- 	request = "launch",
-- 		-- 	program = "${file}",
-- 		-- 	rootPath = "${workspaceFolder}",
-- 		-- 	cwd = "${workspaceFolder}",
-- 		-- 	sourceMaps = true,
-- 		-- 	skipFiles = { "<node_internals>/**" },
-- 		-- 	protocol = "inspector",
-- 		-- 	console = "integratedTerminal",
-- 		-- },
--     {
--       type = "pwa-node",
--       request = "launch",
--       name = "Launch Current File (pwa-node)",
--       cwd = vim.fn.getcwd(),
--       args = { "${file}" },
--       sourceMaps = true,
--       protocol = "inspector",
--     },
-- 		{
-- 			name = "Attach to node process",
-- 			type = "pwa-node",
-- 			request = "attach",
-- 			rootPath = "${workspaceFolder}",
-- 			processId = require("dap.utils").pick_process,
-- 		},
-- 		{
-- 			name = "Debug Main Process (Electron)",
-- 			type = "pwa-node",
-- 			request = "launch",
-- 			program = "${workspaceFolder}/node_modules/.bin/electron",
-- 			args = {
-- 				"${workspaceFolder}/dist/index.js",
-- 			},
-- 			outFiles = {
-- 				"${workspaceFolder}/dist/*.js",
-- 			},
-- 			resolveSourceMapLocations = {
-- 				"${workspaceFolder}/dist/**/*.js",
-- 				"${workspaceFolder}/dist/*.js",
-- 			},
-- 			rootPath = "${workspaceFolder}",
-- 			cwd = "${workspaceFolder}",
-- 			sourceMaps = true,
-- 			skipFiles = { "<node_internals>/**" },
-- 			protocol = "inspector",
-- 			console = "integratedTerminal",
-- 			port = "${port}",
-- 		},
-- 		{
-- 			name = "Compile & Debug Main Process (Electron)",
-- 			type = custom_adapter,
-- 			request = "launch",
-- 			preLaunchTask = "npm run build-ts",
-- 			program = "${workspaceFolder}/node_modules/.bin/electron",
-- 			args = {
-- 				"${workspaceFolder}/dist/index.js",
-- 			},
-- 			outFiles = {
-- 				"${workspaceFolder}/dist/*.js",
-- 			},
-- 			resolveSourceMapLocations = {
-- 				"${workspaceFolder}/dist/**/*.js",
-- 				"${workspaceFolder}/dist/*.js",
-- 			},
-- 			rootPath = "${workspaceFolder}",
-- 			cwd = "${workspaceFolder}",
-- 			sourceMaps = true,
-- 			skipFiles = { "<node_internals>/**" },
-- 			protocol = "inspector",
-- 			console = "integratedTerminal",
-- 		},
-- 	}
-- end
